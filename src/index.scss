body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

$diceSize: 180px;
$dotSize: $diceSize * 0.2;

.main-container {
  max-width: 860px;
  margin: 0 auto;
}

.main-dice-container {
  padding: 30px;
  display: flex;
  justify-content: center;
  margin-bottom: 15px;
}

.dice-container {
  height: $diceSize;
  width: $diceSize;
  perspective: 1000px;

  &.disabled {
    cursor: not-allowed;
  }
}

.dice {
  width: $diceSize;
  height: $diceSize;
  transform-style: preserve-3d;
  transition: all 200ms;

  &.face-1 {
    transform: rotateX(0);
  }

  &.face-2 {
    transform: rotateY(90deg);
  }

  &.face-3 {
    transform: rotateX(-90deg);
  }

  &.face-4 {
    transform: rotateX(90deg);
  }

  &.face-5 {
    transform: rotateY(-90deg);
  }

  &.face-6 {
    transform: rotateX(-180deg);
  }
}

.dot-container {
  display: grid;
  grid-template-columns: repeat(3, $dotSize);
  grid-template-rows: repeat(3, $dotSize);
  grid-gap: $dotSize/4 $dotSize/4;
}

.dot {
  background-color: white;
  border: 2px solid #000;
  border-radius: 50%;
}

.dice {
  [class^="face"] {
    position: absolute;
    width: $diceSize;
    height: $diceSize;
    outline: 2px solid #000;
    outline-offset: -2px;
    background-color: #f96751ec;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .face-1 {
    transform: translateX(0) translateY(0) translateZ($diceSize/2);

    .dot-container {
      .dot {
        grid-column: 2 / span 1;
        grid-row: 2 / span 1;
      }
    }
  }

  .face-3 {
    transform: translateX(0) translateY(-50%) translateZ(0) rotateX(90deg);

    .dot-container {
      .dot:nth-child(1) {
        grid-column: 3 / span 1;
        grid-row: 1 / span 1;
      }

      .dot:nth-child(2) {
        grid-column: 2 / span 1;
        grid-row: 2 / span 1;
      }

      .dot:nth-child(3) {
        grid-column: 1 / span 1;
        grid-row: 3 / span 1;
      }
    }
  }

  .face-2 {
    transform: translateX(-50%) translateY(0%) translateZ(0) rotateY(90deg);

    .dot-container {
      .dot:nth-child(1) {
        grid-column: 3 / span 1;
        grid-row: 1 / span 1;
      }

      .dot:nth-child(2) {
        grid-column: 1 / span 1;
        grid-row: 3 / span 1;
      }
    }
  }

  .face-4 {
    transform: translateX(0) translateY(50%) translateZ(0) rotateX(90deg);

    .dot-container {
      .dot:nth-child(1) {
        grid-column: 1 / span 1;
        grid-row: 1 / span 1;
      }

      .dot:nth-child(2) {
        grid-column: 1 / span 1;
        grid-row: 3 / span 1;
      }

      .dot:nth-child(3) {
        grid-column: 3 / span 1;
        grid-row: 3 / span 1;
      }

      .dot:nth-child(4) {
        grid-column: 3 / span 1;
        grid-row: 1 / span 1;
      }
    }
  }

  .face-5 {
    transform: translateX(50%) translateY(0%) translateZ(0) rotateY(90deg);

    .dot-container {
      .dot:nth-child(1) {
        grid-column: 1 / span 1;
        grid-row: 1 / span 1;
      }

      .dot:nth-child(2) {
        grid-column: 1 / span 1;
        grid-row: 3 / span 1;
      }

      .dot:nth-child(5) {
        grid-column: 2 / span 1;
        grid-row: 2 / span 1;
      }

      .dot:nth-child(3) {
        grid-column: 3 / span 1;
        grid-row: 3 / span 1;
      }

      .dot:nth-child(4) {
        grid-column: 3 / span 1;
        grid-row: 1 / span 1;
      }
    }
  }

  .face-6 {
    transform: translateX(0) translateY(0) translateZ(-$diceSize/2);

    .dot-container {
      .dot:nth-child(1) {
        grid-column: 1 / span 1;
        grid-row: 1 / span 1;
      }

      .dot:nth-child(2) {
        grid-column: 3 / span 1;
        grid-row: 3 / span 1;
      }

      .dot:nth-child(3) {
        grid-column: 1 / span 1;
        grid-row: 3 / span 1;
      }

      .dot:nth-child(4) {
        grid-column: 1 / span 1;
        grid-row: 2 / span 1;
      }

      .dot:nth-child(5) {
        grid-column: 3 / span 1;
        grid-row: 1 / span 1;
      }

      .dot:nth-child(6) {
        grid-column: 3 / span 1;
        grid-row: 2 / span 1;
      }
    }
  }
}

.button-container {
  display: flex;
  justify-content: center;
}

.dan-btn {
  text-decoration: none;
  display: inline-block;
  padding: 8px 16px;
  border-radius: 3px;
  border: 2px solid #444;
  color: #444;
  border-radius: 40px;
  cursor: pointer;

  &[disabled] {
    opacity: .4;
  }
}

.dan-btn--default {
  background-color: #dddddd;
  color: #444;
}

audio {
  width: 100%;
  min-width: 330px;
  max-width: 600px;
}

audio::-webkit-media-controls-panel {
  background: #EE4E34;
}

audio::-webkit-media-controls-mute-button {
  background-color: #FCEDDA;
  border-radius: 50%;
}

audio::-webkit-media-controls-play-button {
  background-color: #FCEDDA;
  border-radius: 50%;
}

audio::-webkit-media-controls-volume-slider {
  background-color: #FCEDDA;
  border-radius: 25px;
  padding-left: 16px;
  padding-right: 30px;
  margin-right: -30px;
}

audio::-webkit-media-controls-current-time-display {
  display: none;
}

audio::-webkit-media-controls-time-remaining-display {
  display: none;
}

audio::-webkit-media-controls-timeline {
  background-color: #FCEDDA;
  border-radius: 25px;
  margin-left: 10px;
  margin-right: 10px;
}

audio::-webkit-media-controls-seek-back-button {}

audio::-webkit-media-controls-seek-forward-button {}

audio::-webkit-media-controls-fullscreen-button {}

audio::-webkit-media-controls-rewind-button {}

audio::-webkit-media-controls-return-to-realtime-button {}

audio::-webkit-media-controls-toggle-closed-captions-button {}


/* BIRD ANIM */

.birdz {
  z-index: 1;
  position: relative;
  overflow: hidden;
}

.bird {
  background-image: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/174479/bird-cells-new.svg);
  background-size: auto 100%;
  width: 88px;
  height: 125px;
  will-change: background-position;

  animation-name: fly-cycle;
  animation-timing-function: steps(10);
  animation-iteration-count: infinite;

  &--one {
    animation-duration: 1s;
    animation-delay: -0.5s;
  }

  &--two {
    animation-duration: 0.9s;
    animation-delay: -0.75s;
  }

  &--three {
    animation-duration: 1.25s;
    animation-delay: -0.25s;
  }

  &--four {
    animation-duration: 1.1s;
    animation-delay: -0.5s;
  }

}

.bird-container {
  position: absolute;
  top: 20%;
  left: -10%;
  transform: scale(0) translateX(-10vw);
  will-change: transform;

  animation-name: fly-right-one;
  animation-timing-function: linear;
  animation-iteration-count: infinite;

  &--one {
    animation-duration: 12s;
    animation-delay: 0;
  }

  &--two {
    animation-duration: 16s;
    animation-delay: 2s;
  }

  &--three {
    animation-duration: 8s;
    animation-delay: 8s;
  }

  &--four {
    animation-duration: 14s;
    animation-delay: 10.25s;
  }

}

@keyframes fly-cycle {

  100% {
    background-position: -900px 0;
  }

}

@keyframes fly-right-one {

  0% {
    transform: scale(0.3) translateX(-10vw);
  }

  10% {
    transform: translateY(2vh) translateX(10vw) scale(0.4);
  }

  20% {
    transform: translateY(0vh) translateX(30vw) scale(0.5);
  }

  30% {
    transform: translateY(4vh) translateX(50vw) scale(0.6);
  }

  40% {
    transform: translateY(2vh) translateX(70vw) scale(0.6);
  }

  50% {
    transform: translateY(0vh) translateX(90vw) scale(0.6);
  }

  60% {
    transform: translateY(0vh) translateX(110vw) scale(0.6);
  }

  100% {
    transform: translateY(0vh) translateX(110vw) scale(0.6);
  }

}

@keyframes fly-right-two {

  0% {
    transform: translateY(-2vh) translateX(-10vw) scale(0.5);
  }

  10% {
    transform: translateY(0vh) translateX(10vw) scale(0.4);
  }

  20% {
    transform: translateY(-4vh) translateX(30vw) scale(0.6);
  }

  30% {
    transform: translateY(1vh) translateX(50vw) scale(0.45);
  }

  40% {
    transform: translateY(-2.5vh) translateX(70vw) scale(0.5);
  }

  50% {
    transform: translateY(0vh) translateX(90vw) scale(0.45);
  }

  51% {
    transform: translateY(0vh) translateX(110vw) scale(0.45);
  }

  100% {
    transform: translateY(0vh) translateX(110vw) scale(0.45);
  }

}


@tailwind base;
@tailwind components;
@tailwind utilities;